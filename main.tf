resource "aws_ecs_cluster" "default" {
    name = "${var.ecs_cluster_name}"
}

resource "random_pet" "this" {
  length = "1"
}

module "ec2_iam_role" {
   source = "Smartbrood/ec2-iam-role/aws"
   name        = "terraform-ecs-${random_pet.this.id}"
   path        = "/"
   description = "This IAM Role generated by Terraform."
   force_detach_policies = false

   policy_arn = [
        "arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess",
   ]
}

module "security_group" {
    source      = "Smartbrood/security-group/aws"
    name        = "ecs-${random_pet.this.id}"
    description = "For ETCD"
    vpc_id      = "${var.vpc}"
    tags        = "${var.tags}"
    ingress_rules_from_any  = ["any"]
    egress_rules_to_any     = ["any"]

}

module "ecs_a" {
    source = "Smartbrood/ec2-instance/aws"
    name                 = "ecs_a"
    count                = "1" 
    ami                  = "${data.aws_ami.ubuntu1604.id}"
    instance_type        = "t2.micro"
    key_name             = "${var.key_name}"
    iam_instance_profile = "${var.profile_name}"
    subnet_id            = "${var.subnet_id}"

    vpc_security_group_ids      = ["${var.security_group_id}"]
    associate_public_ip_address = false
    monitoring                  = false

    tags = "${var.tags}"
}
